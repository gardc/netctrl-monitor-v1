name: "create-dev-build"
on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create_release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: monitor-dev-v${{ env.PACKAGE_VERSION }}
          release_name: "NetCTRL Monitor DEV build v${{ env.PACKAGE_VERSION }}"
          body: "See the assets to download this version and install."
          draft: true
          prerelease: false
  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Build NS
      - name: setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17.2"

      - name: build NetworkService for linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd src-ns-go
          sudo apt-get install -y libpcap-dev
          make buildlinux

      - name: build NetworkService for macos
        if: matrix.platform == 'macos-latest'
        run: |
          cd src-ns-go
          brew install libpcap
          make buildmac

      - name: build NetworkService for windows
        if: matrix.platform == 'windows-latest'
        run: |
          cd src-ns-go
          make buildwin

      # Build the app
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: install app dependencies and build it
        env:
          REACT_APP_NETCTRL_REMOTE_URL: "https://dev.netctrl.io"
        run: yarn && yarn build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}

      # Move built stuff and upload it to DO spaces
      - name: move release to built folder on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir built
          mv src-tauri/target/release/bundle/dmg/*.dmg ./built/
          mv src-tauri/target/release/bundle/macos/*.app* ./built/

      - name: move release to built folder on ubuntu
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir built
          mv src-tauri/target/release/bundle/deb/*.deb ./built/
          mv src-tauri/target/release/bundle/appimage/net-ctrl-monitor*.AppImage* ./built/

      - name: move release to built folder on windows
        if: matrix.platform == 'windows-latest'
        run: |
          powershell mkdir built
          powershell mv src-tauri/target/release/bundle/msi/*.msi* ./built/

      - name: upload built to DO spaces
        uses: BetaHuhn/do-spaces-action@v2
        with:
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          source: built/
          out_dir: monitor-dev-build
          versioning: true